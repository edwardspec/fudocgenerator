{
	"@doc": "Path to FU sources.",
	"pathToMod": "/usr/src/FrackinUniverse",

	"@doc": "Path to unpacked Starbound assets. See https://starbounder.org/Modding:Modding_Basics for how to obtain them.",
	"pathToVanilla": "/usr/src/Starbound",

	"@doc": "Array of Extractor names. Should be in the same order as outputs in [extractionlab_recipes.config]. Note: Hand Mill shouldn't be listed, because its output is the same as output of tier 1 Extraction Lab.",
	"extractorStageBuildings":  [
		"Extraction Lab",
		"Extraction Lab MKII",
		"Quantum Extractor"
	],

	"@doc": "Converts names of recipe groups from [centrifuge_recipes.config] to name of associated Centrifuge-like building. Note: Wooden Centrifuge is currently not handled (itemMapLiquids can't be centrifuged by it, but we still show Any Centrifuge for this group).",
	"centrifugeRecipeGroups":  {
		"itemMapPowder": "Sifter",
		"itemMapRocks": "Rock Crusher",
		"itemMapFarm": "Any Centrifuge",
		"itemMapBees": "Any Centrifuge",
		"itemMapLiquids": "Any Centrifuge",
		"itemMapIsotopes": "Gas Centrifuge"
	},

	"@doc": "Path to logfile. This script can write warnings and/or debugging information into this file.",
	"logfile": "debug.log",

	"@doc": "Directory where to write the resulting wikitext files.",
	"outputDir": "RESULT",

	"@doc": "Ordered list of Crafting Stations, from low-tier to high-tier, from most common to rare/specialized. How is this used: if some item can be crafted on several Stations, then a Station that is closer to beginning of this list will be chosen. If some Crafting Station is NOT on this list, it will have the lowest possible priority (will only be shown if no Stations on this list can craft this item).",
	"craftingStationPriorities": [
		"Basic Crafting",

		"Campfire",
		"Kitchen Counter",

		"Foraging Table",
		"Agricultural Table",

		"Alchemy Table",
		"Chemistry Lab",
		"Bio-Chem Lab",

		"Apothecary",
		"Medical Station",

		"Inventor's Table",
		"Engineer's Table",
		"Architect's Table",

		"Wooden Workbench",
		"Industrial Workbench",

		"Armorworks",
		"Assembly Line",
		"Armory",

		"Machining Table",
		"Auto-Assembler",
		"Matter Assembler",

		"Tome Dais",
		"Writing Desk",
		"Ancient Texts",
		"Antediluvian Texts",

		"Greenhouse",
		"Botany Lab",
		"Gene Design Lab",

		"Tinkering Table",
		"Engineering Bench",
		"Nanofabricator",

		"Electronics Center",
		"Power Station",

		"Anvil",
		"Forge",
		"Replicator",

		"Spinning Wheel",
		"Sewing Machine",
		"Clothing Fabricator",

		"Linguistics Table",
		"Snarshing Table",
		"Esoteric Research",

		"Industrial Centrifuge",

		"Primitive Furnace",
		"Industrial Furnace",
		"Atomic Furnace",

		"Plating Table",

		"Prop Pack Truck",
		"Prop Pack Online Catalog"
	],

	"@doc": "Map of item ID to wikipage title. This is only needed for items with ambiguous names: for example, redflashlight/greenflashlight are both called Flashlight in the game, but are different items.",
	"overrideItemPageTitles": {
		"redflashlight": "Red Flashlight",
		"greenflashlight": "Green Flashlight",
		"yellowflashlight": "Yellow Flashlight",
		"cookedchickenobject": "Cooked Poultry (decorative)",
		"fieldgenerator": "Field Generator (EPP)",
		"electronicgoods": "Electronic Goods (vanilla)",
		"foodgoods": "Food Rations (vanilla)",
		"medicalgoods": "Medical Supplies (vanilla)",
		"militarygoods": "Weapon Parts (vanilla)",
		"lobster": "Lobster (decorative)",
		"coconutmilkobject": "Coconut Milk (decorative)",
		"isn_flamethrower": "Incinerator (weapon)",
		"artifact1": "Ancient Artifact/1",
		"artifact2": "Ancient Artifact/2",
		"artifact3": "Ancient Artifact/3",
		"artifact4": "Ancient Artifact/4",
		"artifact5": "Ancient Artifact/5",
		"fuchocolatechipcookie2": "Chocolate Chip Cookies (sugar)",
		"fu_crewbed3": "Crew Bunk (Wall) (+2)",
		"crewshop": "Hiring Office",
		"blackblock": "... (block)",
		"medievalcandle": "Candle (Glitch)",
		"madnesseyejelly": "Gelatinous Eye (purple)",
		"madnesseyeslime": "Gelatinous Eye (green)",
		"madnessjellyking": "Gelatinous Eye (king)",
		"apexflagpole": "Apex Flag (Prop Pack)",
		"avianflagpole": "Avian Flag (Prop Pack)",
		"floranflagpole": "Floran Flag (Prop Pack)",
		"pirateflagpole": "Pirate Flag (Prop Pack)",
		"glitchflagpole": "Glitch Flag (Prop Pack)",
		"humanflagpole": "Human Flag (Prop Pack)",
		"hylotlflagpole": "Hylotl Flag (Prop Pack)",
		"novakidflagpole": "Novakid Flag (Prop Pack)",
		"protectorateflagpole": "Protectorate Flag (Prop Pack)",
		"rock01": "Rough Stone (rock01)",
		"rock02": "Rough Stone (rock02)",
		"rock03": "Rough Stone (rock03)",
		"rock04": "Rough Stone (rock04)",
		"rock12": "Rough Stone (rock12)",
		"rock15": "Rough Stone (rock15)",
		"rock17": "Rough Stone (rock17)",
		"rock19": "Rough Stone (rock19)",
		"rock20": "Rough Stone (rock20)",
		"elduukhar7-codex": "Elduukhar Life 1 (codex)",
		"elduukhar8-codex": "Elduukhar Life 2 (codex)",
		"elduukhar9-codex": "Elduukhar Life 3 (codex)",
		"elduukhar10-codex": "Elduukhar Life 4 (codex)",
		"fuascendant1-codex": "Ascendant's Tale 1 (codex)",
		"fuascendant2-codex": "Ascendant's Tale 2 (codex)",
		"fuascendant3-codex": "Ascendant's Tale 3 (codex)",
		"fuascendant4-codex": "Ascendant's Tale 4 (codex)",
		"fuascendant5-codex": "Ascendant's Tale 5 (codex)",
		"fuascendant6-codex": "Ascendant's Tale 6 (codex)",
		"fuascendant7-codex": "Ascendant's Tale 7 (codex)",
		"fuascendant8-codex": "Ascendant's Tale 8 (codex)",
		"fuascendant9-codex": "Ascendant's Tale 9 (codex)",
		"fuascendant10-codex": "Ascendant's Tale 10 (codex)",
		"letheiafacility2-codex": "Letheia Facility Internal Memo 1 (codex)",
		"letheiafacility4-codex": "Letheia Facility Internal Memo 2 (codex)",
		"greenguardcodex1-codex": "Greenguard Journal 1",
		"greenguardcodex2-codex": "Greenguard Journal 2",
		"greenguardcodex3-codex": "Greenguard Journal 3",
		"greenguardcodex4-codex": "Greenguard Journal 4",
		"greenguardcodex5-codex": "Greenguard Journal 5",
		"greenguardcodex6-codex": "Greenguard Journal 6",
		"greenguardcodex7-codex": "Greenguard Journal 7",
		"slimepersondiary-codex": "From Man We Come 1 (codex)",
		"slimepersondiaryINFO-codex": "From Man We Come 2 (codex)",
		"greg3-codex": "Experimental Vaccine 1 (codex)",
		"greg4-codex": "Experimental Vaccine 2 (codex)",
		"greg5-codex": "Experimental Vaccine 3 (codex)",
		"greg6-codex": "Experimental Vaccine 4 (codex)",
		"greg7-codex": "Experimental Vaccine 5 (codex)",
		"greg8-codex": "Experimental Vaccine 6 (codex)",
		"greg9-codex": "Experimental Vaccine 7 (codex)",
		"greg10-codex": "Experimental Vaccine 8 (codex)",
		"raptoregg": "Dinosaur Egg (Erichiraptor)",
		"raptoregg2": "Dinosaur Egg (Corvulraptor)",
		"raptoregg3": "Dinosaur Egg (Reliraptor)",
		"raptoregg4": "Dinosaur Egg (Dilophiraptor)",
		"raptoregg5": "Dinosaur Egg (Gariraptor)",
		"gooshoategg": "Shoat Egg (goo)",
		"greenshoategg": "Shoat Egg (green)",
		"slimeshoategg": "Shoat Egg (slime)",
		"nightaranvil:2": "Nightar Replicator (stage 2)",
		"nightaranvil:3": "Nightar Replicator (stage 3)",
		"nightaranvil:4": "Nightar Replicator (stage 4)",
		"miningdrone": "Mining Drone (Peacekeeper)",
		"fu_byospethouse": "Pet House (BYOS)",
		"shadowimmunity1": "Shadow Shield (EPP augment)",
		"shiphatch": "Ship Hatch (huge)",
		"slimeblob1a": "Slime Blob (decorative) (1)",
		"slimeblob2a": "Slime Blob (decorative) (2)",
		"slimeblob3a": "Slime Blob (decorative) (3)",
		"slimeblob4a": "Slime Blob (decorative) (4)",
		"slimeblob5a": "Slime Blob (decorative) (5)",
		"SIV_shipGlitchThrusterPadSmall": "Ship Thruster Pad (Glitch) (small)",
		"SIV_shipNovakidUnderEngineSmall": "Novakid Hull Under (small)",
		"tw_hylotltechstation": "S.A.I.L Interface (Hylotl)",
		"swtjc_wp_brokencompactvwallswitch": "Broken (Input Only) Compact Wall Switch (vertical)",
		"swtjc_wp_compactvand": "Compact AND Gate (vertical)",
		"swtjc_wp_compactvdlatch": "Compact Data Latch (vertical)",
		"swtjc_wp_compactvnand": "Compact NAND Gate (vertical)",
		"swtjc_wp_compactvnor": "Compact NOR Gate (vertical)",
		"swtjc_wp_compactvnot": "Compact NOT Gate (vertical)",
		"swtjc_wp_compactvnxor": "Compact NXOR Gate (vertical)",
		"swtjc_wp_compactvor": "Compact OR Gate (vertical)",
		"swtjc_wp_compactvpersistentswitch": "Compact Persistent Switch (vertical)",
		"swtjc_wp_compactvpersistentswitchinteractive": "Compact Persistent Switch (Interactive) (vertical)",
		"swtjc_wp_compactvrelay": "Compact Relay (vertical)",
		"swtjc_wp_compactvwallswitch": "Compact Wall Switch (vertical)",
		"swtjc_wp_compactvxor": "Compact XOR Gate (vertical)",
		"swtjc_wp_sequencer2bitv": "2-Bit Sequencer (vertical)",
		"swtjc_wp_sequencer2bitvinputs": "2-Bit Sequencer (With Inputs) (vertical)",
		"swtjc_wp_sequencer3bitv": "3-Bit Sequencer (vertical)",
		"swtjc_wp_sequencer3bitvinputs": "3-Bit Sequencer (With Inputs) (vertical)",
		"swtjc_wp_sequencer4bitv": "4-Bit Sequencer (vertical)",
		"swtjc_wp_sequencer4bitvinputs": "4-Bit Sequencer (With Inputs) (vertical)",
		"relay": "Relay (vanilla)",
		"fu_byostechstationdeco": "S.A.I.L Interface (decorative)",
		"imperialchestlong": "Mantizi Chest (long)",
		"crewcontract_hobo": "Hobo Contract (quest reward)",
		"slopedtethydeplating": "Tethyde Plating (sloped)",
		"futoolbox2": "Toolbox (white)",
		"irradiumchestlarge": "Irradium Chest (container)",
		"slimehide": "Slime Chest (container)",
		"bonechest": "Bone Chest (container)",
		"unsmashableprismrockhumanoid": "Prism Crystal (humanoid)",
		"unsmashableprismrockpenguin": "Prism Crystal (penguin)",
		"invisibleslimechest": "Invisible Shirt (Slime)",
		"invisibleslimelegs": "Invisible Pants (Slime)",
		"leadguitar": "Lead Guitar (instrument)",
		"valkyriehelm": "Valkyrie Helm (cosmetic)",
		"madnesstoken2": "Unknown Artifact (voxel)",
		"dbladelong": "Tek Blade (two-handed)"
	},

	"@doc": "List of item IDs to skip. This allows us to ignore unobtainable vanilla items in favor of obtainable item from the mod (e.g. Mining Laser).",
	"ignoredItems": [
		"lunarbaselaser",
		"laserminer",
		"fu_scriptedfarmableexample",
		"futram",
		"prototyperoutpost",
		"designlaboutpost",
		"armoryoutpost",
		"chemlaboutpost",
		"nanofabricatoroutpost",
		"powerstationoutpost",
		"luridmagazine2-codex",
		"luridmagazine3-codex",
		"luridmagazine4-codex",
		"fuhca5-codex",
		"fuincubator",
		"liquidmercury",
		"imperviumfurnitureplating",
		"fissionfurnacenew",
		"stonemace2",
		"mysterioustrashbag",
		"cavedetector"
	],

	"@doc": "Map of monster ID to wikipage title. This is only needed for monsters with ambiguous names (e.g. ice/fire/poison/electric baby fluffalos are all called Fluffalo Calf).",
	"overrideMonsterPageTitles": {
		"electricfluffalobaby": "Electric Fluffalo Calf",
		"erchiusghost2": "Erchius Ghost (Lightless)",
		"erchiusghost3": "Erchius Ghost (Gas Giant)",
		"firefluffalobaby": "Fire Fluffalo Calf",
		"icefluffalobaby": "Ice Fluffalo Calf",
		"poisonfluffalobaby": "Poison Fluffalo Calf",
		"pteropodsummoned": "Hunter Pteropod (summon of Thorn Rifle)",
		"ignomesummon": "Ignome (summon of Pyreite Broadsword)",
		"gasbag2": "Gas Bag (pet)",
		"megaburrower": "Doomwyrm",
		"poisonparatail": "Poison Paratail",
		"fuguardianminion": "Ancient Guardian/Minion",
		"largeminion": "Ancient Guardian/Large Minion",
		"collidingminion": "Ancient Guardian/Colliding Minion",
		"shadowrangedminion": "Ancient Guardian/Shadow Ranged Minion",
		"firerangedminion": "Ancient Guardian/Fire Ranged Minion",
		"icerangedminion": "Ancient Guardian/Ice Ranged Minion",
		"electricrangedminion": "Ancient Guardian/Electric Ranged Minion",
		"poisonrangedminion": "Ancient Guardian/Poison Ranged Minion",
		"pangolin": "Pangolin",
		"ixolingsulphuricbaby": "Baby Sulphuric Ixoling",
		"fudodofarmironbaby": "Baby Ironbeak",
		"fudodofarmbaby": "Baby Copperbeak",
		"gooshoat": "Shoat (goo)",
		"gooshoatbaby": "Shoat Lamb (goo)",
		"greenshoat": "Shoat (green)",
		"greenshoatbaby": "Shoat Lamb (green)",
		"slimeshoat": "Shoat (slime)",
		"slimeshoatbaby": "Shoat Lamb (slime)",
		"bighairyfrankbabyrad": "Widow (Irradiated)",
		"doll2": "Creepy Doll (ranged)",
		"starspawn2": "Star-Spawn Acolyte",
		"starspawn3": "Xtl-Brxall Kefrin'xshax",
		"starspawn4": "Star Spawn of Cthulhu (boss)",
		"fleshreaper2": "Flesh Reaper (yellow)",
		"fleshreaper3": "Flesh Reaper (red)",
		"futinybee": "Tiny Giant Bee",
		"futinybeered": "Red Bee",
		"horror2": "Floating Horror (madness monster)",
		"ocumeraboss": "Ocumera (boss)",
		"pandorasboxcottonbophomegrown": "Cottonbop (friendly)",
		"pandorasboxerchiusorelitcaptive": "Erchius Orelit (pet)",
		"sonicsnake": "Sonicsnake",
		"spikesnake": "Spikesnake",
		"spheresnake": "Spheresnake",
		"spheresnake2": "Spheresnake2",
		"futwigun2": "Ancient Cannon (minion of Precursor Warbot)",
		"motherpoptop2": "Mama Knifetop",
		"adultpoptopfiremadness": "Magmatop Omega (pet)",
		"poptopmadnesspet": "Poptop (pet)",
		"kluexbossstatue": "Kluex Avatar (immobile)",
		"fupoptopfarm": "Farmable Poptop",
		"tarslime": "Ecto Slime (Tar)",
		"aquasnake": "Aquasnake",
		"fuheavydrone": "Heavy War Drone",
		"futrifangle": "Precursor Trifangle"
	},

	"@doc": "List of monster IDs to skip. For example, the mod uses \"fumooshi\" monster instead of vanilla \"mooshi\", so vanilla monster can be skipped.",
	"ignoredMonsters": [
		"miningdrone",
		"mooshi",
		"mooshibaby",
		"tentaclecometsporefu",
		"electricguardianboss",
		"fireguardianboss",
		"iceguardianboss",
		"poisonguardianboss",
		"shadowguardianboss",
		"guardianminion",
		"poisonfluffalo",
		"icefluffalo",
		"firefluffalo",
		"electricfluffalo",
		"robothen",
		"hen",
		"robothenbaby",
		"henbaby",
		"fluffalo",
		"fluffalobaby",
		"warbot2",
		"eyejellykingspawn",
		"eyeslimekingspawn",
		"fugiantbee2",
		"futinybee2",
		"futinybeered2",
		"squidbeastnodrop",
		"pandorasboxerchlingspawn",
		"pandorasboxqueennocttop",
		"chiropterror",
		"omnicannon2",
		"futwigunboss",
		"omnicannon",
		"gorillaking",
		"minishoggothold",
		"minishoggoth2",
		"poptopduplicated",
		"pandorasboxnocttopnightspawn",
		"firetopsummon",
		"microslime",
		"microslimespawned",
		"microslimespawnedinvuln",
		"slimespawned",
		"slimespawnedinvuln",
		"ectomicroslime",
		"magmaslimespawned",
		"magmaslimespawnedinvuln",
		"magmamicroslime",
		"magmamicroslimespawned",
		"magmamicroslimespawnedinvuln",
		"tarmicroslime",
		"tarmicroslimespawned",
		"tarmicroslimespawnedinvuln",
		"tarslimespawned",
		"tarslimespawnedinvuln",
		"noxcapture",
		"helicultist",
		"trifangle",
		"mamalilodon",
		"alienqueenminionspawn"
	],

	"@doc": "These items will be recognized, but won't get an article.",
	"itemsThatDoNotNeedAnArticle": [
		"crewshop:2"
	],

	"@doc": "Into how many Chunk subpages to split the {{#cargo_store:}} directives. This is necessary for performance (so that the entire Cargo database is not overwritten every time one item gets modified). Note: increasing/decreasing this variable shouldn't be frequent (keeping this number the same allows Consistent Hashing to minimize the number of edits). Note: actual number of chunks will be slightly higher than this value, because their size is additionally limited by 'cargoMaxChunkSizeKBytes' variable.",
	"cargoChunksCount": {
		"item": 80,
		"recipe": 85,
		"node": 3,
		"armorset": 4,
		"codex": 3,
		"monster": 4,
		"planet": 8
	},

	"@doc": "Maximum size (in kilobytes) of page with {{#cargo_store:}} directives. If the chunk exceeds that, it will be forcefully split with no regard for Consistent Hashing. MediaWiki is not optimized for handling large pages, so we must be responsible and keep this value relatively low.",
	"cargoMaxChunkSizeKBytes": 200,

	"@doc": "Maximum number of {{#cargo_store:}} directives per Chunk page. If the chunk exceeds that, it will be forcefully split with no regard for Consistent Hashing. This reduces the number of INSERT/DELETE queries that Extension:Cargo has to perform when the Chunk page gets modified.",
	"cargoMaxChunkRowsCount": 250,

	"@doc": "Map of research tree ID to wikipage-friendly title. This is used to remove [Madness] from the name of Metaphysics tree, because 1) [ and ] are not valid symbols for wikipage titles, 2) the fact that this is Madness tree doesn't need to be in the name of each page, it can be written once in the article about the tree itself.",
	"overrideResearchTreeName": {
		"frackinuniversemadness": "Metaphysics"
	},

	"@doc": "List of asset keys that we don't use anywhere. They won't be stored in the cache, which slightly improves the loading time.",
	"ignoredAssetKeys": [
		"colorOptions",
		"paneLayout",
		"gui",
		"animationCustom",
		"musicTrack",
		"converse",
		"renderParameters",
		"smashSounds",
		"particleEmitter",
		"ambientNoises",
		"animation",
		"animationParts",
		"animationPosition",
		"apexDescription",
		"avianDescription",
		"floranDescription",
		"glitchDescription",
		"humanDescription",
		"hylotlDescription",
		"novakidDescription"
	],

	"@doc": "URL of the MediaWiki API that should be used in [update_status_cache.js] script. Leave as empty string to disable cache updates.",
	"mediawikiApiUrl": "https://frackinuniverse.miraheze.org/w/api.php",

	"@doc": "List of file extensions that should be loaded as JSON assets. Maps them to internal type (e.g. '.miningtool' files have the type 'item').",
	"extensionToAssetType": {
		"activeitem": "item",
		"augment": "item",
		"back": "item",
		"beamaxe": "item",
		"biome": "biome",
		"chest": "item",
		"codex": "item",
		"config": "config",
		"consumable": "item",
		"currency": "item",
		"flashlight": "item",
		"functions": "functions",
		"harvestingtool": "item",
		"head": "item",
		"inspectiontool": "item",
		"instrument": "item",
		"item": "item",
		"legs": "item",
		"liqitem": "item",
		"liquid": "liquid",
		"material": "material",
		"matitem": "item",
		"miningtool": "item",
		"monsterpart": "monsterpart",
		"monstertype": "monster",
		"npctype": "npc",
		"object": "item",
		"painttool": "item",
		"patch": "patch",
		"questtemplate": "quest",
		"recipe": "recipe",
		"species": "species",
		"thrownitem": "item",
		"tillingtool": "item",
		"treasurepools": "treasurepools",
		"weaponability": "ability",
		"wiretool": "item"
	},

	"@doc": "It true, then assets with unknown extensions (not in extensionToAssetType) will also be loaded. This is useless for generate.js, but can be needed in linter scripts, etc.",
	"loadUnknownAssets": false,

	"@doc": "Filenames that match these patterns will be skipped when loadding JSON assets.",
	"ignoreAssetPatterns": {
		"notJson": [
			"tests/**",
			"a_modders/**",
			"dungeons/**.json",
			"_previewimage",
			"**/*.{lua,png,xcf,wav,ogg,txt,md,ase,aseprite,tsx,ttf,xb1,aup,ico,tmx,pdn,zip,au,old,unused}"
		],
		"brokenVanillaAssets": [
			"cursors/reticle.cursor",
			"monsters/dungeon/glitchspider/default.frames"
		],
		"notNeededToGenerateDocumentation": [
			"projectiles/**/*.config{,.patch}",
			"species/*namegen.config{,.patch}",
			"**/wild*seed.object{,.patch}",
			"dungeons/**",
			"objects/biome/smashablerocks/**"
		]
	},

	"@doc": "Names of weapon abilities that are so trivial/evident (e.g. Bow Shot for primary of most bows) that there is no benefit in mentioning their name as Special Ability in the infobox. These names won't be included into the Cargo database.",
	"trivialWeaponAbilities": [
		"Bow Shot",
		"Cleave",
		"Combo Slash",
		"Smash",
		"Stab",
		"Warspear Combo",
		"Whip Crack"
	],

	"@doc": "Console command to invoke convert. We use it in \"prepare_uploads.js\" to cut sprites into individual images.",
	"imageMagickConvertCommand": "convert"
}
