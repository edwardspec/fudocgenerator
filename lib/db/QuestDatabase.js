'use strict';

const { AssetDatabase, RemoveBadSymbols, util } = require( '.' );

/**
 * Discovers all known quests.
 */
class QuestDatabase {
	constructor() {
		this.loaded = false;

		// Array of known quests,
		// e.g. { "id1": { ... }, "id2": { ... }, ... }
		this.knownQuests = new Map();
	}
	/**
	 * Scan the AssetDatabase and find all quests.
	 */
	load() {
		AssetDatabase.forEach( 'quest', ( filename, asset ) => {
			var quest = asset.data;
			if ( quest.id.endsWith( '.generated' ) ) {
				// This is not a unique quest, it's a template for autogenerated tenant quest.
				return;
			}

			if ( !quest.title ) {
				util.log( '[warn] QuestDatabase: quest ' + quest.id + " doesn't have a title." );
				return;
			}

			quest.title = RemoveBadSymbols.fromName( quest.title );
			this.knownQuests.set( quest.id, quest );
		} );

		util.log( '[info] QuestDatabase: found ' + this.knownQuests.size + ' quests.' );
		this.loaded = true;
	}

	/**
	 * Find the quest by its ID.
	 *
	 * @param {string} id
	 * @return {Object|null} Arbitrary information about this quest.
	 */
	find( id ) {
		if ( !this.loaded ) {
			this.load();
		}

		return this.knownQuests.get( id );
	}
}

module.exports = new QuestDatabase();
